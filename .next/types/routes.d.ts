// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = "/" | "/admin/commissions" | "/admin/dashboard" | "/admin/indications" | "/admin/indications/[id]" | "/admin/products" | "/admin/products/[id]" | "/admin/users" | "/api/architect/indications/[id]" | "/architect/dashboard" | "/architect/indications" | "/architect/indications/[id]" | "/architect/team" | "/login" | "/pending-approval" | "/register" | "/register/success"
type AppRouteHandlerRoutes = "/api/admin/catalog/add-image" | "/api/admin/catalog/add-piece" | "/api/admin/catalog/delete-image" | "/api/admin/catalog/delete-piece" | "/api/admin/commissions/update-status" | "/api/admin/create-user" | "/api/admin/global-indications-report" | "/api/admin/products/add-image" | "/api/admin/products/add-piece" | "/api/admin/products/create" | "/api/admin/products/delete-image" | "/api/admin/projects/create-quote" | "/api/admin/projects/update-status" | "/api/admin/update-status" | "/api/admin/update-user" | "/api/admin/users/update-status" | "/api/architect" | "/api/architect/add-catalog-product" | "/api/architect/add-custom-product" | "/api/architect/indications-report" | "/api/architect/invite-collaborator" | "/api/architect/projects/[id]" | "/api/architect/update-quote-status" | "/api/architect/upload-contract" | "/api/indications/create" | "/api/login" | "/api/logout" | "/api/products/create" | "/api/register" | "/api/upload-contract"
type PageRoutes = never
type LayoutRoutes = "/"
type RedirectRoutes = never
type RewriteRoutes = never
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes | AppRouteHandlerRoutes


interface ParamMap {
  "/": {}
  "/admin/commissions": {}
  "/admin/dashboard": {}
  "/admin/indications": {}
  "/admin/indications/[id]": { "id": string; }
  "/admin/products": {}
  "/admin/products/[id]": { "id": string; }
  "/admin/users": {}
  "/api/admin/catalog/add-image": {}
  "/api/admin/catalog/add-piece": {}
  "/api/admin/catalog/delete-image": {}
  "/api/admin/catalog/delete-piece": {}
  "/api/admin/commissions/update-status": {}
  "/api/admin/create-user": {}
  "/api/admin/global-indications-report": {}
  "/api/admin/products/add-image": {}
  "/api/admin/products/add-piece": {}
  "/api/admin/products/create": {}
  "/api/admin/products/delete-image": {}
  "/api/admin/projects/create-quote": {}
  "/api/admin/projects/update-status": {}
  "/api/admin/update-status": {}
  "/api/admin/update-user": {}
  "/api/admin/users/update-status": {}
  "/api/architect": {}
  "/api/architect/add-catalog-product": {}
  "/api/architect/add-custom-product": {}
  "/api/architect/indications-report": {}
  "/api/architect/indications/[id]": { "id": string; }
  "/api/architect/invite-collaborator": {}
  "/api/architect/projects/[id]": { "id": string; }
  "/api/architect/update-quote-status": {}
  "/api/architect/upload-contract": {}
  "/api/indications/create": {}
  "/api/login": {}
  "/api/logout": {}
  "/api/products/create": {}
  "/api/register": {}
  "/api/upload-contract": {}
  "/architect/dashboard": {}
  "/architect/indications": {}
  "/architect/indications/[id]": { "id": string; }
  "/architect/team": {}
  "/login": {}
  "/pending-approval": {}
  "/register": {}
  "/register/success": {}
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
  "/": never
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap, AppRouteHandlerRoutes }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }

  /**
   * Context for Next.js App Router route handlers
   * @example
   * ```tsx
   * export async function GET(request: NextRequest, context: RouteContext<'/api/users/[id]'>) {
   *   const { id } = await context.params
   *   return Response.json({ id })
   * }
   * ```
   */
  interface RouteContext<AppRouteHandlerRoute extends AppRouteHandlerRoutes> {
    params: Promise<ParamMap[AppRouteHandlerRoute]>
  }
}
